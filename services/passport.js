const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys = require('../config/keys');

const User = mongoose.model('users');

// set cookie 
passport.serializeUser((user, done) => {
    // user id is not profile id but the id generated by mongo and assigned to the record -> user.id is the shortcut to get access to the id
    done(null, user.id);
});

passport.deserializeUser((id, done) => {
    User.findById(id)
        .then(user => {
            done(null, user);
        })
});

passport.use(
    new GoogleStrategy(
        {
            clientID: keys.googleClientID,
            clientSecret: keys.googleClientSecret,
            callbackURL: '/auth/google/callback'
        },
        (accessToken, refreshToken, profile, done) => {
            User.findOne({ googleId: profile.id })
                .then((existingUser) => {
                    if (existingUser) {
                        // we already have a record with the given profile id 
                        done(null, existingUser);
                    } else {
                        // we don't have a user record with this id, make a new record
                        // take model instance and save to mongo database 
                        new User({ googleId: profile.id }).save()
                            .then(user => done(null, user));
                    }
                })
        }
    )
);